"use strict";

var _regeneratorRuntime = require("babel-runtime/regenerator")["default"];

var _Object$assign = require("babel-runtime/core-js/object/assign")["default"];

var _interopRequireDefault = require("babel-runtime/helpers/interop-require-default")["default"];

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _path = require("path");

var _mzFs = require("mz/fs");

var _mkdirp = require("mkdirp");

var _mkdirp2 = _interopRequireDefault(_mkdirp);

/** Write utility to help concat and target.
  @param {String} parent directory
  @param {String} base directory/file
  @param {Mixed} data
  @param {String} sourcemap
  @param {Function} promisified writer function
*/
exports["default"] = _regeneratorRuntime.mark(function callee$0$0() {
  var _ref,
      dir,
      base,
      data,
      map,
      _ref$write,
      write,
      file,
      args$1$0 = arguments;

  return _regeneratorRuntime.wrap(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        _ref = args$1$0.length <= 0 || args$1$0[0] === undefined ? {} : args$1$0[0];
        dir = _ref.dir;
        base = _ref.base;
        data = _ref.data;
        map = _ref.map;
        _ref$write = _ref.write;
        write = _ref$write === undefined ? _mzFs.writeFile : _ref$write;
        file = (0, _path.join)(dir, base);

        _mkdirp2["default"].sync((0, _path.dirname)(file));
        context$1$0.next = 11;
        return write(file, data);

      case 11:
        if (map) (0, _mzFs.writeFile)(file + ".map", JSON.stringify(_Object$assign(map, { file: base })));

      case 12:
      case "end":
        return context$1$0.stop();
    }
  }, callee$0$0, this);
});
module.exports = exports["default"];